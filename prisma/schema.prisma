datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Enum for user roles
enum UserRole {
  ADMIN
  STUDENT
  TEACHER
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  role      UserRole @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  quizzes         Quiz[]           @relation("UserQuizzes")
  customQuestions CustomQuestion[]

  @@map("users")
}

model Subject {
  id   Int    @id @default(autoincrement())
  name String @unique

  topics          Topic[]
  quizzes         Quiz[]
  questions       Question[]
  customQuestions CustomQuestion[]

  @@map("subjects")
}

model Topic {
  id        Int    @id @default(autoincrement())
  name      String @unique
  subjectId Int

  subject Subject @relation(fields: [subjectId], references: [id])
  quizzes Quiz[]

  @@map("topics")
}

model Quiz {
  id                Int      @id @default(autoincrement())
  quizOwnedBy       Int
  duration          Int
  subjectId         Int
  topicId           Int
  numberOfQuestions Int      @default(0)
  yearStart         Int
  yearEnd           Int
  createdAt         DateTime @default(now())

  owner   User    @relation("UserQuizzes", fields: [quizOwnedBy], references: [id])
  subject Subject @relation(fields: [subjectId], references: [id])
  topic   Topic   @relation(fields: [topicId], references: [id])
  questions Question[]

  @@map("quizzes")
}

model CustomQuestion {
  id          Int    @id @default(autoincrement())
  description String
  subjectId   Int
  authorId    Int

  subject Subject @relation(fields: [subjectId], references: [id])
  author  User    @relation(fields: [authorId], references: [id])

  @@map("custom_questions")
}

model Question {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique
  description String
  difficulty  String
  subjectId   Int
  createdAt   DateTime @default(now())
  year        Int

  subject      Subject               @relation(fields: [subjectId], references: [id])
  explanations QuestionExplanation[]
  quizzes      Quiz[]

  @@map("questions")
}

model QuestionExplanation {
  id         Int      @id @default(autoincrement())
  questionId Int
  feedback   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@map("question_explanations")
}
